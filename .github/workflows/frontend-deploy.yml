name: Deploy Frontend (Monorepo)
on:
  push:
    branches:
      - prod
    paths:
      - 'frontend/anti-fake-news/**' # Trigger เมื่อ Frontend เปลี่ยน
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
          
      - name: Build and push Frontend
        uses: docker/build-push-action@v6
        with:
          context: ./frontend/anti-fake-news # ชี้ไปที่โฟลเดอร์แอป Frontend
          push: true
          tags: rattikan042/se331-frontend:latest
          
      - name: Create remote frontend directory
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            # ใช้ตัวแปรชื่อผู้ใช้และสร้างโฟลเดอร์
            mkdir -p /home/${{ secrets.HOST_USER_NAME }}/frontend
            
      - name: Copy docker-compose via SCP
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          port: 22
          source: "frontend/anti-fake-news/docker-compose.yml" # Source Path
          target: "/home/${{ secrets.HOST_USER_NAME }}/frontend" # Target Path
          overwrite: true
          
      - name: Deploy with Docker Compose
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/${{ secrets.HOST_USER_NAME }}/frontend
            echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login --username "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
            docker compose down
            docker compose pull
            docker compose up -d