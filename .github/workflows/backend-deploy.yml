name: Deploy Backend (Monorepo)
on:
  push:
    branches:
      - prod
    paths:
      - 'backend/**'
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'
          
      - name: Run Maven and Prepare Artifacts 
        working-directory: ./backend # แก้ปัญหา POM Error
        run: |
          mvn clean install -DskipTests -B
          # ขั้นตอนนี้จำเป็นสำหรับการทำ Docker Build (ถ้า Dockerfile ใช้เลเยอร์แยก)
          mkdir -p target/dependency && (cd target/dependency; unzip ../*.jar) 
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
          
      - name: Build and push Backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend # ชี้ไปที่โฟลเดอร์ backend
          push: true
          tags: rattikan042/se331-backend:latest
          
      - name: Create remote backend directory
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            # ใช้ตัวแปรชื่อผู้ใช้และสร้างโฟลเดอร์
            mkdir -p /home/${{ secrets.HOST_USER_NAME }}/backend
            
      - name: Copy docker-compose via SCP
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          port: 22
          source: "backend/docker-compose-prod.yml"
          target: "/home/${{ secrets.HOST_USER_NAME }}/backend" # Target Path
          overwrite: true
          
      - name: Deploy with Docker Compose
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/${{ secrets.HOST_USER_NAME }}/backend
            mv docker-compose-prod.yml docker-compose.yml 
            echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login --username "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
            docker compose down
            docker compose pull
            docker compose up -d