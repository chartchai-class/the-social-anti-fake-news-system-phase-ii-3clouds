name: Deploy Backend
on:
  push:
    branches:
      - prod
    paths:
      - 'backend/**'
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'  # ‚Üê ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å adopt ‡πÄ‡∏õ‡πá‡∏ô temurin
          
      - name: Run Maven
        working-directory: ./backend
        run: |
          mvn clean install -DskipTests -B
          # ‡∏•‡∏ö‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Dockerfile
          # mkdir -p target/dependency && (cd target/dependency; unzip ../*.jar)
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
          
      - name: Build and push Backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: rattikan042/se331-backend:latest
          
      - name: Create remote backend directory
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            mkdir -p /home/${{ secrets.HOST_USER_NAME }}/backend
            
      - name: Copy docker-compose via SCP
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          port: 22
          source: "backend/docker-compose-prod.yml"
          target: "/home/${{ secrets.HOST_USER_NAME }}/backend"
          overwrite: true
          
      - name: Verify file copied
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo "üìÅ Checking backend directory:"
            ls -la /home/${{ secrets.HOST_USER_NAME }}/backend/
            
      - name: Install Docker and Deploy
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/${{ secrets.HOST_USER_NAME }}/backend
            
            # ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Docker ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
            if ! command -v docker &> /dev/null; then
              echo "üîç Installing Docker..."
              curl -fsSL https://get.docker.com -o get-docker.sh
              sudo sh get-docker.sh
              sudo usermod -aG docker $USER
            fi
            
            # ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Docker Compose ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
            if ! command -v docker-compose &> /dev/null; then
              echo "üîç Installing Docker Compose..."
              sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi
            
            echo "üîç Docker versions:"
            docker --version
            docker-compose --version
            
            # Login to Docker Hub
            echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login --username "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
            
            # Deploy
            docker-compose -f docker-compose-prod.yml down || true
            docker-compose -f docker-compose-prod.yml pull
            docker-compose -f docker-compose-prod.yml up -d
            
            echo "‚úÖ Backend deployment completed!"