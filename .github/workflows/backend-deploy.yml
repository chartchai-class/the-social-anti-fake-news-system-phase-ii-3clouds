name: Deploy Backend
on:
  push:
    branches:
      - prod
    paths:
      - 'backend/**'
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'  # ← เปลี่ยนจาก adopt เป็น temurin
          
      - name: Run Maven and Prepare Artifacts 
        working-directory: ./backend
        run: |
          mvn clean install -DskipTests -B
          # สร้าง dependency structure สำหรับ Dockerfile
          mkdir -p target/dependency && (cd target/dependency; jar -xf ../*.jar) 
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
          
      - name: Build and push Backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: rattikan042/se331-backend:latest
          
      - name: Setup Docker and Create Target Directory
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            # 1. ติดตั้ง Docker (ถ้ายังไม่มี)
            if ! command -v docker &> /dev/null; then
              sudo apt-get update
              sudo apt-get install -y docker.io
              sudo usermod -aG docker $USER
            fi
            # 2. ติดตั้ง Docker Compose Plugin
            if ! command -v docker compose &> /dev/null; then
              sudo apt-get install -y docker-compose-plugin
            fi
            # 3. สร้างโฟลเดอร์เป้าหมาย
            mkdir -p /home/$USER/backend
            
      - name: Copy docker-compose via SCP
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          port: 22
          source: "backend/docker-compose-prod.yml"
          target: "/home/${{ secrets.HOST_USER_NAME }}/backend"
          overwrite: true
          
      - name: Deploy with Docker Compose
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/$USER/backend
            
            # ใช้ชื่อไฟล์ตาม source โดยตรง (ไม่ต้อง rename)
            echo "${{ secrets.DOCKER_HUB_TOKEN }}" | sudo docker login --username "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
            sudo docker compose -f docker-compose-prod.yml down || true
            sudo docker compose -f docker-compose-prod.yml pull
            sudo docker compose -f docker-compose-prod.yml up -d
            
            echo "✅ Backend deployment completed!"